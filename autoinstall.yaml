#cloud-config
autoinstall:
  version: 1
  
  packages:
    - ubuntu-desktop
    - curl
    - gnupg
    - wget
    - gnome-keyring  # Keyring wird bei Login aktiviert
    - libsecret-1-0
    
  snaps:
    - name: firefox
    - name: gnome-3-38-2004
    - name: gtk-common-themes
    - name: snap-store
    - name: snapd-desktop-integration
    
  identity:
    realname: 'Ubuntu User'
    username: ubuntu
    password: "$6$/EJRTPAuFLF6UCDQ$hoJf/WCXALcxXLHuc4cqyryVFH10nAgmsZiXbR4w.DoApeiCklhhkrduphh.aifM6EVtxh6AeewOenEFAh.YO0"
    hostname: ubuntu-desktop
    
  locale: de_DE.UTF-8
  keyboard:
    layout: de
    variant: ""
    
  storage:
    layout:
      name: direct
      
  # KORRIGIERT: Für Ubuntu 24.04 den Standard-Kernel verwenden
  early-commands:
    - echo 'linux-generic' > /run/kernel-meta-package
    
  late-commands:
    # Prüfen ob User existiert und ggf. Passwort-Änderung
    - curtin in-target -- bash -c 'if id ubuntu >/dev/null 2>&1; then passwd -e ubuntu; fi'
    
    # Boot-Splash aktivieren
    - >-
      curtin in-target -- sed -i /etc/default/grub -e
      's/GRUB_CMDLINE_LINUX_DEFAULT=".*/GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"/'
    - curtin in-target -- update-grub
    
    # NetworkManager konfigurieren
    - rm -f /target/etc/netplan/00-installer-config*yaml
    - >-
      printf "network:\n  version: 2\n  renderer: NetworkManager"
      > /target/etc/netplan/01-network-manager-all.yaml
      
    # Microsoft GPG-Keys vorbereiten
    - curtin in-target -- wget -qO /tmp/microsoft.asc https://packages.microsoft.com/keys/microsoft.asc
    - curtin in-target -- gpg --dearmor --output /usr/share/keyrings/microsoft.gpg /tmp/microsoft.asc
    - curtin in-target -- rm /tmp/microsoft.asc
    
    # Einfaches Setup-Script erstellen (ohne Here-Document)
    - curtin in-target -- bash -c 'echo "#!/bin/bash" > /home/ubuntu/setup-intune.sh'
    - curtin in-target -- bash -c 'echo "# Intune Setup" >> /home/ubuntu/setup-intune.sh'
    - curtin in-target -- bash -c 'echo "sudo apt-get update" >> /home/ubuntu/setup-intune.sh'
    - curtin in-target -- bash -c 'echo "sudo apt-get install -y openjdk-11-jre" >> /home/ubuntu/setup-intune.sh'
    - curtin in-target -- bash -c 'echo "sudo apt-get purge -y openjdk-21-jre-headless || true" >> /home/ubuntu/setup-intune.sh'
    - curtin in-target -- bash -c 'echo "echo Microsoft Edge Repository..." >> /home/ubuntu/setup-intune.sh'
    - curtin in-target -- bash -c 'echo "echo deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/edge stable main | sudo tee /etc/apt/sources.list.d/microsoft-edge.list" >> /home/ubuntu/setup-intune.sh'
    - curtin in-target -- bash -c 'echo "echo Intune Repository..." >> /home/ubuntu/setup-intune.sh'  
    - curtin in-target -- bash -c 'echo "echo deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/ubuntu/24.04/prod noble main | sudo tee /etc/apt/sources.list.d/microsoft-intune-portal.list" >> /home/ubuntu/setup-intune.sh'
    - curtin in-target -- bash -c 'echo "sudo apt-get update" >> /home/ubuntu/setup-intune.sh'
    - curtin in-target -- bash -c 'echo "sudo apt-get install -y microsoft-edge-stable intune-portal" >> /home/ubuntu/setup-intune.sh'
    - curtin in-target -- bash -c 'echo "rm -rf ~/.cache/intune-portal" >> /home/ubuntu/setup-intune.sh'
    - curtin in-target -- bash -c 'echo "echo Setup abgeschlossen! Starte: intune-portal" >> /home/ubuntu/setup-intune.sh'
    
    # Script ausführbar machen
    - curtin in-target -- chmod +x /home/ubuntu/setup-intune.sh
    - curtin in-target -- chown ubuntu:ubuntu /home/ubuntu/setup-intune.sh
    
    # Server-Pakete entfernen
    - >-
      curtin in-target -- apt-get remove -y
      btrfs-progs cryptsetup* lvm2 xfsprogs
      ubuntu-server ubuntu-server-minimal
      
    # Cloud-init behalten
    - curtin in-target -- apt-get install -y cloud-init
    - curtin in-target -- apt-get autoremove -y
